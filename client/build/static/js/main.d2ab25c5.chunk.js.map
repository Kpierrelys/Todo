{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","value","ref","useEffect","current","usePrevious","editingTemplate","autoComplete","className","onSubmit","e","preventDefault","axios","put","id","name","editTask","htmlFor","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","Form","setName","addTask","alert","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","a","getTodos","todos","console","log","getData","get","res","data","updatedTasks","map","_id","delete","remainingTasks","editedTaskList","post","posts","taskList","filterList","tasksNoun","length","headingText","role","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2ab25c5.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst usePrevious = (value) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n};\r\n\r\nconst Todo = (props) => {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  // HANDLE CHANGE\r\n  const handleChange = (e)=> {\r\n    setNewName(e.target.value)\r\n  };\r\n\r\n  // HANDLE SUBMIT\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios.put(`/put/${props.id}`, {\r\n      name: newName\r\n    });\r\n    props.editTask(props.id, newName);\r\n    setNewName('');\r\n    setEditing(false);\r\n  };\r\n\r\n  const editingTemplate = (\r\n    <form autoComplete=\"off\" className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input id={props.id} className=\"todo-text\" type=\"text\" onChange={handleChange} ref={editFieldRef} />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)} ref={editButtonRef}>\r\n            Edit <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n    useEffect(() => {\r\n      if(!wasEditing && isEditing) {\r\n        editFieldRef.current.focus();\r\n      } \r\n      if (wasEditing && !isEditing) {\r\n        editButtonRef.current.focus();\r\n      }\r\n    }, [wasEditing, isEditing]);\r\n    \r\n    return (\r\n        <li className='todo'>\r\n          {isEditing ? editingTemplate : viewTemplate}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Todo","import React, { useState } from 'react';\r\n\r\nconst Form = (props) => {\r\n    const [name, setName] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!name) {\r\n            alert('task needed...')\r\n        } else {\r\n            props.addTask(name);\r\n\r\n            setName('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            What needs to be done?\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst FilterButton = (props) => {\r\n    return (\r\n        <button type=\"button\" className=\"btn toggle-btn\" aria-pressed={props.isPressed} onClick={() => props.setFilter(props.name)}>\r\n          <span className=\"visually-hidden\">Show </span>\r\n          <span>{props.name}</span>\r\n          <span className=\"visually-hidden\"> tasks</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default FilterButton\r\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport axios from 'axios';\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('All');\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const todos = await getTodos();\n        setTasks(todos);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getData();\n  }, []);\n\n   const getTodos = async () => {\n    const res = await axios.get('/getposts');\n    try {\n      const data = await res.data;\n      return data;\n    } catch (error) {\n      console.log(error)\n    }\n  };\n\n  const toggleTaskCompleted = (id) => {\n    const updatedTasks = tasks.map( task => {\n      if (id === task._id) {\n        return {...task, completed : !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const deleteTask = (id) => {\n    axios.delete(`/delete/${id}`);\n    const remainingTasks = tasks.filter(task => id !== task._id);\n    setTasks(remainingTasks)\n  };\n\n  const editTask = (id, newName) => {\n    const editedTaskList = tasks.map(task => {\n      if (id === task._id) {\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList)\n  }\n\nconst addTask = async (task) => {\n  await axios.post('/posts', {\n    name: task\n    }\n  );\n\n  const posts = await axios.get('/getposts');\n  const data = await posts.data;\n  \n  setTasks(data)\n}\n\n  const taskList = tasks\n.filter(FILTER_MAP[filter])\n.map(task => (\n  <Todo\n    id={task._id}\n    name={task.name}\n    completed={task.completed}\n    key={task._id}\n    toggleTaskCompleted={toggleTaskCompleted}\n    deleteTask={deleteTask}\n    editTask={editTask}\n  />\n));\n\n  const filterList = FILTER_NAMES.map(name => (<FilterButton key={name} name={name} isPressed={name === filter} setFilter={setFilter} />));\n\n  const tasksNoun =  taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Todo App</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}